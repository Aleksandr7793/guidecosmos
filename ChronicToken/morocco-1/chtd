#!/bin/bash

while true
do

# Logo

echo "========================================================================================================================"
curl -s https://raw.githubusercontent.com/StakeTake/script/main/logo.sh | bash
echo "========================================================================================================================"

# Menu

PS3='Select an action: '
options=(
"Install Node"
"Check Log"
"Check balance"
"Request tokens in discord"
"Create Validator"
"Exit")
select opt in "${options[@]}"
do
case $opt in

"Install Node")
echo "============================================================"
echo "Install start"
echo "============================================================"
echo "Setup NodeName:"
echo "============================================================"
read NODENAME
echo "============================================================"
echo "Setup WalletName:"
echo "============================================================"
read WALLETNAME
echo export NODENAME=${NODENAME} >> $HOME/.bash_profile
echo export WALLETNAME=${WALLETNAME} >> $HOME/.bash_profile
echo export CHAIN_ID=morocco-1 >> $HOME/.bash_profile
source ~/.bash_profile

#UPDATE APT
sudo apt update && sudo apt upgrade -y
sudo apt install gcc curl tar wget clang pkg-config libssl-dev jq build-essential bsdmainutils git make ncdu gcc git jq chrony liblz4-tool -y


#INSTALL GO
wget https://golang.org/dl/go1.17.7.linux-amd64.tar.gz; \
rm -rv /usr/local/go; \
tar -C /usr/local -xzf go1.17.7.linux-amd64.tar.gz && \
rm -v go1.17.7.linux-amd64.tar.gz && \
echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> ~/.bash_profile && \
source ~/.bash_profile && \
go version

#INSTALL
curl https://get.starport.network/starport! | bash
git clone https://github.com/ChronicNetwork/chtd
cd chtd
git checkout
starport chain build

chtd init $NODENAME --chain-id $CHAIN_ID

echo "============================================================"
echo "Be sure to write down the mnemonic!"
echo "============================================================"
#WALLET
chtd keys add $WALLETNAME

chtd unsafe-reset-all
rm $HOME/.cht/config/genesis.json
wget -O $HOME/.cht/config/genesis.json https://raw.githubusercontent.com/ChronicNetwork/net/main/mainnet/genesis.json
wget -O $HOME/.cht/config/addrbook.json https://raw.githubusercontent.com/StakeTake/guidecosmos/main/ChronicToken/morocco-1/addrbook.json

external_address=$(wget -qO- eth0.me)
peers="24b5c9c7b7ff03005e9ec5dcd5cded6d13f59d6a@168.119.89.31:26656,47651428a4b8374f8b604d7b2be54f7dd0607abc@141.95.174.11:26656,4e9a1be76e5f2bf6c34748b85aed0cedca892cc8@164.92.148.142:26656,4fa1b4ea05c483946886030895a4ef23ac74ad6a@141.95.65.26:35656,63a0f4848dcdb5a7f59a1463c29b58f8fa129ef0@144.91.78.197:26656,7050ce66596d783df0db435106ae79b03d6ce325@185.229.119.29:26656,8da5565782a61d863293f1793cc06e54c86467d4@62.171.171.91:26656,a528b3aee82415bf1f675df76ca1ebf29dd188be@165.232.88.237:26656,baba59448c38ba9604784d50e8db4a311d9127e8@10.24.201.78:26656,bf719f34707da178a37cebcefd4b0efce233c923@202.61.198.96:26656,d068b49c77daea1ba3b37a16f21a04031e79f4b6@65.108.66.34:40256,e66d9cc95e208a39c34fede530a0187c789dc13a@3.22.172.109:26656,76428d36ac1369176b91e42e5fa6461721aff0fa@188.166.93.243:26656"
sed -i.bak -e "s/^external_address *=.*/external_address = \"$external_address:26656\"/; s/^persistent_peers *=.*/persistent_peers = \"$peers\"/" $HOME/.cht/config/config.toml

# config pruning
pruning="custom"
pruning_keep_recent="100"
pruning_keep_every="0"
pruning_interval="10"

sed -i -e "s/^pruning *=.*/pruning = \"$pruning\"/" $HOME/.cht/config/app.toml
sed -i -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \"$pruning_keep_recent\"/" $HOME/.cht/config/app.toml
sed -i -e "s/^pruning-keep-every *=.*/pruning-keep-every = \"$pruning_keep_every\"/" $HOME/.cht/config/app.toml
sed -i -e "s/^pruning-interval *=.*/pruning-interval = \"$pruning_interval\"/" $HOME/.cht/config/app.toml


tee $HOME/chtd.service > /dev/null <<EOF
[Unit]
Description=CHTD
After=network.target
[Service]
Type=simple
User=$USER
ExecStart=$(which chtd) start
Restart=on-failure
RestartSec=10
LimitNOFILE=65535
[Install]
WantedBy=multi-user.target
EOF

sudo mv $HOME/chtd.service /etc/systemd/system/

# start service
sudo systemctl daemon-reload
sudo systemctl enable chtd
sudo systemctl restart chtd

break
;;

"Check Log")

journalctl -u chtd -f -o cat

break
;;


"Check balance")
chtd q bank balances $(chtd keys show $WALLETNAME -a --bech acc)
break
;;

"Create Validator")
chtd tx staking create-validator \
  --amount 1000000ucht \
  --from $WALLETNAME \
  --commission-max-change-rate "0.05" \
  --commission-max-rate "0.20" \
  --commission-rate "0.05" \
  --min-self-delegation "1" \
  --pubkey $(chtd tendermint show-validator) \
  --moniker $NODENAME \
  --chain-id $CHAIN_ID \
  --gas 200000 \
  -y
break
;;

"Request tokens in discord")
echo "========================================================================================================================"
echo "In order to receive tokens, you need to go to the Discord server
and request tokens in the validator channel"
echo "========================================================================================================================"

break
;;

"Exit")
exit
;;
*) echo "invalid option $REPLY";;
esac
done
done
